[package]
name = "opensprinkler-firmware"
version = "0.0.1-alpha"
edition = "2021"

[features]
default = ["demo"]
demo = []
mqtt = ["paho-mqtt"]

[build]

#[env]
#JAVASCRIPT_URL = ""
#WEATHER_SERVICE_URL = ""

[target]
rustc-env = {key = "value"}

[build-dependencies]
cmake = "0.1.48"

[dependencies]
libc = "0.2.126"
mac_address = "1.1.3"
md5 = "0.7.0"
tracing = "0.1.35"
#rocket = { version = "0.4.11"}
system_shutdown = "3.0.0"

reqwest = { version = "0.11.11", features = ["blocking", "json"] }

serde_json = "1.0.82"
byteorder = "1.4.3"
queues = "1.1.0"
chrono = { version = "0.4.20-beta.1", features = ["serde"] }
bson = "2.3.0"
semver = { version = "1.0.12", features = ["serde"] }
serde-big-array = "0.4.1"
tracing-subscriber = "0.3.15"
form_urlencoded = "1.0.1"
ctrlc = { version = "3.2.2", features = ["termination"] }

paho-mqtt = { version =  "0.11.1",  optional = true, features=["bundled"], default-features = false}
clap = { version = "3.2.16", features = ["derive"] }
url = "2.2.2"
nix = { version = "0.24.2", features = ["fs", "reboot", "net", "time"] }
mockito = "0.31.0"
stunclient = "0.3.1"

[dependencies.rppal]
version = "0.13.1"
features = ["gpio"]

[dependencies.serde]
version = "1.0.140"
features = ["derive"]

# Linux
[target.'cfg(target_os = "linux")'.dependencies]
#nix = { version = "0.24.2", features = ["fs", "reboot", "net", "time"] }
zbus = "2.3.2"
ruspiro-timer = { version = "0.6.0", features = ["pi4_low"] }


[patch.crates-io]
paho-mqtt-sys = { path = "C:/Users/Zach/repos/github.com/paho.mqtt.rust/paho-mqtt-sys" }
rppal = { path = "C:/Users/Zach/repos/github.com/zaxbux/rppal" }

[target.'cfg(target_os = "linux")'.patch.crates-io]
ruspiro-interrupt = { path = "/home/ospi/repos/ruspiro-interrupt/interrupt" }
ruspiro-singleton = { path = "/home/ospi/repos/ruspiro-singleton" }
